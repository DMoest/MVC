<?php

declare(strict_types=1);

namespace daap19\Dice;

use PHPUnit\Framework\TestCase;

/**
 * Test cases for Dice class.
 */
class DiceGraphicTest extends TestCase
{
    protected object $dice;

    /**
     * @description setUp for test suit. Each test case will run this at first.
     */
    final protected function setUp(): void
    {
        $this->dice = new DiceGraphic();
    }


    /**
     * @description tearDown for test suit. Each test case will run this when done is done.
     */
    final protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }


    /**
     * @description Test DiceGraphic construct method.
     */
    public function testDiceGraphicConstruct()
    {
        /* Test class object for namespace & type */
        $this->assertInstanceOf("daap19\Dice\DiceGraphic", $this->dice);
        $this->assertIsObject($this->dice);

        /* Test class attributes existence */
//        $this->assertClassHasStaticAttribute("SIDES", DiceGraphic::class);

        /* Test existence of expected class methods */
        $this->assertTrue(method_exists($this->dice, "__construct"), "Class does not have expected method __construct.");
        $this->assertTrue(method_exists($this->dice, "graphicDice"), "Class does not have expected method graphicDice.");
    }


    /**
     * @description Test DiceGraphic graphicDice() method.
     */
    public function testDiceGraphicPrintMethod()
    {
        /* setup test case */
        $this->dice->roll();
        $graphicDice = $this->dice->graphicDice();
        $expected = "dice-" . $this->dice->getLastRoll();

        /* test case assertions */
        $this->assertIsString($graphicDice);
        $this->assertStringMatchesFormat($expected, $graphicDice);
    }
}
